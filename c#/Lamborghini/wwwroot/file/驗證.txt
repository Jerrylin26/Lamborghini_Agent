

1. 前端驗證 (HTML5 / JS / jQuery Validation)

	執行地點：使用者瀏覽器

	伺服器資源消耗： 幾乎 沒有

	特色：

	即時提醒（輸入不合法就不能送出）。

	只要有人關掉 JS 或直接用 Postman，前端驗證就形同虛設。

	用途：減少「無效請求」送到伺服器，提升使用者體驗。


/*---------------------------------------------------------------------*/

2. 後端驗證 (ModelState / DataAnnotations)

	執行地點：ASP.NET Core 應用程式伺服器 (IIS/Kestrel)

	伺服器資源消耗： 有（CPU 計算 + 記憶體）

	檢查 Required、Range、Remote 驗證等。

	但通常這些驗證屬性只會消耗很少的資源。

	用途：

	確保所有進來的資料，即使繞過前端，也會被檢查。

	保護業務邏輯，不讓髒資料繼續往 DB 層跑。

/*---------------------------------------------------------------------*/


3. 資料庫驗證 (NOT NULL, FK, UNIQUE, CHECK)

	執行地點：SQL Server / MSSQL

	伺服器資源消耗： 最大

	每一次檢查都會建立一個資料庫請求 (Network I/O + SQL Parsing + Transaction 處理)。

	特別是「唯一性檢查」需要查 DB → 消耗更大。

	用途：

	保證資料完整性（Schema level）。

	就算應用程式寫壞了，DB 還能擋掉垃圾資料。